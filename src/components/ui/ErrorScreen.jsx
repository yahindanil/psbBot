export default function ErrorScreen({ error, onRetry, canRetry = true }) {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  const getDiagnosticInfo = () => {
    const info = {
      timestamp: new Date().toLocaleString(),
      userAgent: navigator.userAgent,
      url: window.location.href,
      apiBaseUrl:
        process.env.NEXT_PUBLIC_API_BASE_URL || "http://localhost:8000",
      isOnline: navigator.onLine,
    };

    return info;
  };

  // –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
  const analyzeError = (error) => {
    if (typeof error === "object" && error.type) {
      return {
        type: error.type,
        message: error.message,
        details: error.details,
      };
    }

    // –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ—à–∏–±–æ–∫
    if (typeof error === "string") {
      if (error.includes("Failed to fetch")) {
        return {
          type: "NETWORK_ERROR",
          message: "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É",
          details: { originalError: error },
        };
      }
      if (error.includes("API Error")) {
        return {
          type: "API_ERROR",
          message: error,
          details: { originalError: error },
        };
      }
    }

    return {
      type: "UNKNOWN_ERROR",
      message: error?.message || error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞",
      details: { originalError: error },
    };
  };

  const errorAnalysis = analyzeError(error);
  const diagnosticInfo = getDiagnosticInfo();

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –æ—à–∏–±–∫–∏
  const getRecommendations = (errorType) => {
    switch (errorType) {
      case "NETWORK_ERROR":
        return [
          "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É",
          "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω",
          "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É",
          "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞",
        ];
      case "API_ERROR":
        return [
          "–°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
          "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç",
          "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è",
        ];
      case "TIMEOUT_ERROR":
        return [
          "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞",
          "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
          "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å",
        ];
      default:
        return [
          "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É",
          "–û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞",
          "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ",
        ];
    }
  };

  const recommendations = getRecommendations(errorAnalysis.type);

  return (
    <div
      style={{
        position: "fixed",
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "#F5ECDA",
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        alignItems: "center",
        padding: "20px",
        zIndex: 9999,
        overflow: "auto",
      }}
    >
      {/* –ò–∫–æ–Ω–∫–∞ –æ—à–∏–±–∫–∏ */}
      <div
        style={{
          width: "80px",
          height: "80px",
          backgroundColor: "#ff6b6b",
          borderRadius: "50%",
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          marginBottom: "20px",
          fontSize: "40px",
          color: "white",
        }}
      >
        ‚ö†Ô∏è
      </div>

      <h2
        style={{
          fontSize: "24px",
          fontWeight: "bold",
          color: "#283B41",
          textAlign: "center",
          marginBottom: "10px",
          fontFamily: "Arial, sans-serif",
        }}
      >
        –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      </h2>

      <p
        style={{
          fontSize: "16px",
          color: "#666",
          textAlign: "center",
          marginBottom: "20px",
          fontFamily: "Arial, sans-serif",
          lineHeight: "1.5",
        }}
      >
        {errorAnalysis.message}
      </p>

      {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
      <div
        style={{
          backgroundColor: diagnosticInfo.isOnline ? "#d4edda" : "#f8d7da",
          border: `1px solid ${
            diagnosticInfo.isOnline ? "#c3e6cb" : "#f5c6cb"
          }`,
          color: diagnosticInfo.isOnline ? "#155724" : "#721c24",
          padding: "10px",
          borderRadius: "8px",
          marginBottom: "20px",
          fontSize: "14px",
          textAlign: "center",
        }}
      >
        {diagnosticInfo.isOnline
          ? "üü¢ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω"
          : "üî¥ –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"}
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div
        style={{
          backgroundColor: "#fff3cd",
          border: "1px solid #ffeaa7",
          padding: "15px",
          borderRadius: "8px",
          marginBottom: "20px",
          maxWidth: "500px",
          width: "100%",
        }}
      >
        <h4
          style={{ margin: "0 0 10px 0", color: "#856404", fontSize: "16px" }}
        >
          üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é:
        </h4>
        <ul style={{ margin: 0, paddingLeft: "20px", color: "#856404" }}>
          {recommendations.map((rec, index) => (
            <li key={index} style={{ marginBottom: "5px", fontSize: "14px" }}>
              {rec}
            </li>
          ))}
        </ul>
      </div>

      {/* –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏ */}
      <details
        style={{
          marginBottom: "20px",
          padding: "15px",
          backgroundColor: "#fff",
          borderRadius: "8px",
          border: "1px solid #ddd",
          maxWidth: "500px",
          width: "100%",
        }}
      >
        <summary
          style={{
            cursor: "pointer",
            fontWeight: "bold",
            color: "#666",
            marginBottom: "10px",
          }}
        >
          üîç –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        </summary>

        <div style={{ fontSize: "12px", color: "#333" }}>
          <div style={{ marginBottom: "15px" }}>
            <strong>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</strong>
            <pre
              style={{
                backgroundColor: "#f8f9fa",
                padding: "8px",
                borderRadius: "4px",
                margin: "5px 0",
                whiteSpace: "pre-wrap",
                wordBreak: "break-word",
              }}
            >
              {JSON.stringify(diagnosticInfo, null, 2)}
            </pre>
          </div>

          {errorAnalysis.details && (
            <div>
              <strong>–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:</strong>
              <pre
                style={{
                  backgroundColor: "#f8f9fa",
                  padding: "8px",
                  borderRadius: "4px",
                  margin: "5px 0",
                  whiteSpace: "pre-wrap",
                  wordBreak: "break-word",
                }}
              >
                {JSON.stringify(errorAnalysis.details, null, 2)}
              </pre>
            </div>
          )}
        </div>
      </details>

      {canRetry && onRetry && (
        <button
          onClick={onRetry}
          style={{
            backgroundColor: "#4caf50",
            color: "white",
            border: "none",
            padding: "12px 24px",
            borderRadius: "8px",
            fontSize: "16px",
            fontWeight: "bold",
            cursor: "pointer",
            fontFamily: "Arial, sans-serif",
            transition: "background-color 0.3s",
          }}
          onMouseOver={(e) => (e.target.style.backgroundColor = "#45a049")}
          onMouseOut={(e) => (e.target.style.backgroundColor = "#4caf50")}
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      )}
    </div>
  );
}
